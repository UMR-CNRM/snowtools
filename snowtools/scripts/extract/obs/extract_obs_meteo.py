#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Extraction des données d'observation depuis la BDCLIM
# Matthieu Lafaysse 10 sept 2014
# Modified Léo Viallon-Galinier 22 oct 2021
# Script simplifié pour obtenir un format obs.csv depuis la BDCLIM

import argparse
import os

from snowtools.scripts.extract.obs.bdquery import question
from bronx.stdtypes.date import Date

parser = argparse.ArgumentParser(
        description="Read precititation and temperature observations from BDCLim for all availables stations"
        )
parser.add_argument("date_min", help="Start date")
parser.add_argument("date_max", help="End date")
parser.add_argument("-o", "--output", help="Output folder",
                    default='.', dest='output')
parser.add_argument("--rr", action="store_true", default=False, help="Produce RR output")
parser.add_argument("--tn", action="store_true", default=False, help="Produce TN output")
parser.add_argument("--tx", action="store_true", default=False, help="Produce TX output")
parser.add_argument("--tt", action="store_true", default=False, help="Produce T output at hourly timestep")
parser.add_argument("--f", dest="frequency", action="store", default="daily", help="Observation frequency", choices=["monthly", "daily"])
args = parser.parse_args()

if not os.path.isdir(args.output):
    os.mkdir(args.output)

# List of stations with homoegenized series of mmonthly observations
#stations_t = ['04049001', '05046001', '05098001', '05157001', '05183001', '06029001', '06088001', '06127001',
#              '09023002', '09029001', '09122001', '09289001', '20004002', '20041001', '20050001', '20148001',
#              '20342001', '31042012', '31069001', '31157001', '31403002', '38130001', '38242001', '38299001',
#              '38421001', '38442001', '38548001', '64024001', '64189001', '64274001', '64320001', '64549001',
#              '65059009', '65344001', '66016001', '66136001', '66148001', '73026001', '73034002', '73054001',
#              '74093001', '74280001']
#stations_r = ['04024001', '04039001', '04041001', '04049001', '04070009', '04076001', '04088001', '04096002',
#              '04099001', '04113001', '04178001', '04226001', '04230001', '05004001', '05007001', '05013003',
#              '05026001', '05027001', '05032002', '05038001', '05046001', '05063001', '05064001', '05070001',
#              '05079001', '05090001', '05090002', '05093001', '05098001', '05101001', '05110001', '05127001',
#              '05132001', '05139002', '05139006', '05142001', '05157001', '05182001', '06004002', '06004004',
#              '06016001', '06023004', '06029001', '06050002', '06057001', '06071001', '06077006', '06086001',
#              '06088001', '06088003', '06088007', '06094002', '06118002', '06127001', '06148001', '06163001',
#              '06163007', '09027001', '09029001', '09047001', '09055001', '09100001', '09122001', '09181003',
#              '09194001', '09220001', '09225002', '09283002', '09289001', '09299003', '09306001', '09328001',
#              '20004002', '20004003', '20031001', '20040001', '20041001', '20050001', '20108001', '20108002',
#              '20211001', '20232001', '20249001', '20272001', '20312001', '31042001', '31069001', '31070004',
#              '31144001', '31157001', '31374001', '31403002', '31451001', '31540001', '38006001', '38021001',
#              '38034001', '38040001', '38053001', '38053003', '38064001', '38073001', '38082001', '38095001',
#              '38128001', '38130001', '38153001', '38162001', '38170001', '38226002', '38242001', '38248002',
#              '38285001', '38334001', '38421001', '38442001', '38501001', '38504001', '38517001', '38522001',
#              '38527001', '38548001', '64006001', '64024001', '64092002', '64109001', '64123001', '64157001',
#              '64189001', '64216001', '64301002', '64316001', '64320001', '64320003', '64324001', '64331002',
#              '64342001', '64416001', '64445008', '64450001', '64480001', '64537001', '64549001', '65031001',
#              '65032001', '65055001', '65059009', '65123001', '65129003', '65258001', '65295003', '65304001',
#              '65319001', '65344001', '65388001', '65452001', '66016001', '66024001', '66029001', '66037001',
#              '66038003', '66049001', '66062001', '66117001', '66127001', '66136001', '66137003', '66148001',
#              '66183001', '66230001', '73004001', '73034002', '73054001', '73055001', '73064001', '73132001',
#              '73146001', '73167001', '73181001', '73206001', '73215001', '73220001', '73232001', '73258001',
#              '73261001', '73330001', '74024001', '74034001', '74035001', '74051002', '74056001', '74080002',
#              '74081002', '74083002', '74085001', '74087001', '74093001', '74134002', '74137001', '74173001',
#              '74203001', '74211002', '74221001', '74256001', '74258002', '74280001', '74281001', '74285002',
#              '74286001', '74289001']

# stations_t = stations_r = ['4006004','4006006','4006400','4006401','4006403','4019001','4019400','4019401','4019402','4019403',
# '4019404','4062400','4073400','4096001','4096401','4099001','4100400','4100401','4115001','4126400',
# '4136001','4173001','4193002','4193008','4193400','4193401','4205001','4205400','4226001','5001400',
# '5001401','5004001','5007001','5007400','5023001','5023403','5023404','5026001','5026400','5026401',
# '5027001','5027002','5027401','5031001','5038001','5044400','5058001','5058400','5061400','5063003',
# '5063402','5063403','5063404','5063406','5063407','5064001','5064400','5064403','5072400','5077401',
# '5077402','5079001','5079400','5079402','5085001','5085400','5085402','5085403','5090002','5093001',
# '5093003','5093402','5093403','5096001','5096003','5096400','5096401','5096402','5096403','5096404',
# '5098001','5098400','5098401','5098402','5101001','5101003','5101400','5110001','5110400','5110401',
# '5114002','5114400','5114401','5114402','5119401','5119402','5119403','5120002','5120401','5132001',
# '5133400','5139006','5139400','5139405','5145002','5153400','5157001','5157003','5157400','5161400',
# '5161401','5161402','5177400','5177401','5177402','5181002','5182001','5183001','5183400','6016001',
# '6056001','6056005','6056400','6070001','6073005','6073400','6073401','6073405','6077001','6077006',
# '6094001','6094002','6094400','6094401','6116002','6119001','6120002','6120400','6120401','6120402',
# '6120403','6127001','6127400','6153400','6163005','6163400','6163401','26059001','26059400','26074001',
# '26142001','26168001','26290400','26290401','38002400','38002401','38002404','38002405','38002406','38005001',
# '38005400','38005402','38006400','38006401','38020001','38020400','38020401','38021001','38021400','38040001',
# '38052400','38090400','38128001','38163006','38186001','38186400','38186401','38187400','38191002','38191400',
# '38191401','38191402','38191405','38191408','38191409','38205400','38207001','38253400','38253401','38253403',
# '38253404','38253405','38253407','38264400','38264401','38285001','38285400','38289401','38366001','38375001',
# '38375400','38375402','38375403','38395400','38395403','38395404','38439400','38442001','38442400','38442401',
# '38469001','38469400','38472002','38472400','38472401','38472403','38514400','38522001','38527001','38527400',
# '38527401','38548001','38548003','38548400','38548401','38548402','38548403','38567400','38567404','38567405',
# '38567406','38567407','73004400','73004401','73013001','73015400','73015401','73023001','73023401','73023402',
# '73024400','73024401','73026001','73034002','73034008','73034400','73034401','73038400','73040005','73040006',
# '73040400','73040402','73047401','73047402','73054002','73054401','73054402','73054407','73055001','73056002',
# '73071400','73071401','73071402','73071403','73071404','73071405','73093001','73098001','73123400','73123401',
# '73123402','73132001','73132003','73132400','73132402','73132403','73138002','73139401','73143003','73144400',
# '73144404','73144405','73150400','73150401','73157002','73157400','73157401','73173400','73173401','73175001',
# '73176400','73176401','73187002','73194005','73194400','73194401','73197001','73206001','73206003','73206400',
# '73206401','73206402','73221001','73227400','73227401','73230002','73232001','73232004','73232400','73232401',
# '73235400','73235401','73242001','73244001','73257001','73257400','73257401','73257405','73261001','73280001',
# '73280402','73280403','73290002','73290400','73296002','73296005','73296400','73296401','73296406','73301001',
# '73304004','73304008','73304400','73304402','73304403','73304404','73304405','73306003','73306005','73306401',
# '73306403','73306404','73307400','73307402','73318400','73318401','73322400','73322401','74014400','74014401',
# '74014402','74014403','74014404','74032400','74032401','74033400','74033401','74034001','74037002','74056005',
# '74056400','74056401','74056402','74056403','74056405','74056406','74056409','74056415','74056416','74056417',
# '74056418','74056419','74058400','74058402','74058403','74063002','74063400','74063402','74063403','74063404',
# '74080002','74080400','74080401','74080403','74083002','74085001','74085400','74085403','74085404','74085406',
# '74134002','74134400','74134401','74136003','74136005','74136400','74136401','74143003','74173001','74173400',
# '74173401','74187001','74190400','74190401','74191001','74191003','74191400','74191401','74191403','74191404',
# '74191406','74208004','74215400','74236401','74236404','74238400','74238401','74258002','74258400','74258403',
# '74266001','74270400','74276400','74279400','74286400','74290002','204010221','204010222','204011751','204012911',
# '204040011','204041101','204042331','204070411','9023001','9023400','9023401','9029001','9029400','9029401',
# '9029402','9032001','9032400','9032401','9032402','9070400','9070401','9135400','9135401','9139001',
# '9139400','9139401','9139402','9140001','9162001','9182003','9193400','9193401','9206001','9206002',
# '9206400','9206401','9220004','9231400','9231401','9283002','9285400','9290004','9290400','31042001',
# '31042012','31042400','31042401','31042403','31042404','31042405','31042407','31085400','31085401','31123005',
# '31123400','31221400','31221401','31404001','31508400','31508401','64040400','64040401','64316001','64316002',
# '64316400','64320001','64320400','64320401','64320402','64320403','64320404','64320405','64320406','64330400',
# '64336400','64542400','65006001','65017002','65017400','65017401','65017403','65017404','65031001','65032001',
# '65138400','65138401','65138402','65188003','65188400','65188401','65188402','65188403','65192001','65192006',
# '65195001','65199400','65199401','65258001','65258400','65282003','65283001','65295004','65295400','65295401',
# '65329400','65388001','65388400','65388402','65388403','65388405','65388406','65413400','65481400','65481401',
# '66004400','66004401','66005001','66005004','66062001','66067400','66067402','66081002','66082001','66082004',
# '66082400','66082401','66095001','66117001','66119002','66122001','66124004','66124400','66124401','66124402',
# '66125003','66146002','66147001','66147400','66147401','66147402','66154401','66155001','66157001','66181001',
# '66183001','66188400','66188401','66194002','66204400','66206002','66220002','99130015','99130401','99130402',
# '99130403','99130404','99130405','99130406','99130408','99130409','99130410','99130411','99130412','99130413',
# '99130414','99130415','99130416','99130421','203000400','203000401','203000402','203000403','203000404','203000405',
# '203000406','203000407','203000408','203000409','203000410','203000444','203000445','203000446','203000447','203000448',
# '203000449','203000451','203000452','203000455','203000458','203000459','203000460','203000461','203000462','203000465',
# '203000466','203000467','203000468','203000476','203000483','203017010','203017014','203017018','203025029','203025045',
# '203025046','203025064','20040400','20023400','20254400','20341400','20341001','20007400','20266001','20007401',
# '20124001','20023401','20124401','20031400','20047001','20108002','20124400','20359004','20142001','20031401',
# '20040003','20007402','20031001','20124402','20246001',]
stations_t = stations_r = ['38191002',]


if __name__ == "__main__":

    datedeb = args.date_min
    datefin = args.date_max
    begin = Date(datedeb)
    end = Date(datefin)

    # II.1.1 construction de la question pour les postes nivo pour la HTN
    # ---------------------------------------------------------------------------
    # On prend toutes les heures

if args.frequency == "monthly":
    table = "MENSQ"
    sufix = "_me"
elif args.frequency == "daily":
    table = "Q"
    sufix = ""
else:
    table = "H"

# 1. RR
# ------

if args.rr:
    question1 = question(
            listvar=["dat", f"{table}.num_poste", "poste.nom_usuel", "poste.alti", "rr"+sufix],
            table=table,
            listorder=[f'{table}.num_poste', 'dat'],
            listjoin=[
                f'POSTE ON {table}.NUM_POSTE = POSTE.NUM_POSTE and POSTE.NUM_POSTE in (' + ','.join(stations_r) + ')'
                ],
            period=[datedeb, datefin],
            dateformat=args.frequency,
            )
    question1.run(outputfile=f'raw_{args.frequency}_obs_RR_{begin.ymd}_{end.ymd}.csv')

# 2. TN
# ------

if args.tn:
    question2 = question(
            listvar=["dat", f"{table}.num_poste", "poste.nom_usuel", "poste.alti", "tn"+sufix],
            table=table,
            listorder=[f'{table}.num_poste', 'dat'],
            listjoin=[
                f'POSTE ON {table}.NUM_POSTE = POSTE.NUM_POSTE and POSTE.NUM_POSTE in (' + ','.join(stations_t) + ')'
                ],
            period=[datedeb, datefin],
            dateformat=args.frequency,
            )
    question2.run(outputfile=f'raw_{args.frequency}_obs_TN_{begin.ymd}_{end.ymd}.csv')

# 3. TX
# ------

if args.tx:
    question3 = question(
            listvar=["dat", f"{table}.num_poste", "poste.nom_usuel", "poste.alti", "tx"+sufix],
            table=table,
            listorder=[f'{table}.num_poste', 'dat'],
            listjoin=[
                f'POSTE ON {table}.NUM_POSTE = POSTE.NUM_POSTE and POSTE.NUM_POSTE in (' + ','.join(stations_t) + ')'
                ],
            period=[datedeb, datefin],
            dateformat=args.frequency,
            )
    question3.run(outputfile=f'raw_{args.frequency}_obs_TX_{begin.ymd}_{end.ymd}.csv')

# 4. T horaires
# ---------------

if args.tt:
    question4 = question(
            listvar=["dat", "H.num_poste", "poste.nom_usuel", "poste.alti", "tn", "tx", "t"],
            table='H',
            listorder=['H.num_poste', 'dat'],
            listjoin=[
                'POSTE ON H.NUM_POSTE = POSTE.NUM_POSTE and POSTE.NUM_POSTE in (' + ','.join(stations_t) + ')'
                ],
            listconditions=[
                "tn is not NULL",
                "tx is not NULL"
                ],
            period=[datedeb, datefin],
            )
    question4.run(outputfile='obs_brutes_T.csv')
